<?xml version="1.0" encoding="UTF-8"?>
<configuration>
    <!-- 日志保存路径为tomcat下面的logs下面的mobileLog文件夹，logback会自动创建文件夹，这样设置了就可以输出日志文件了
        <substitutionProperty name="logbase" value="${catalina.base}/logs/mobileLog/"
        /> -->
    <substitutionProperty name="logbase" value="E:/data/appLogs/logback/" />
    <!-- 这个是要配置输出文件的 -->
    <jmxConfigurator />
    <appender name="stdout" class="ch.qos.logback.core.ConsoleAppender">
        <Encoding>UTF-8</Encoding>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>DEBUG</level>
            <onMatch>ACCEPT</onMatch>
            <!--如果onMismatch 设置为 ACCEPT，level及以上级别都会被打印-->
            <onMismatch>ACCEPT</onMismatch>
            <!--如果onMismatch 设置为 DENY，只有level级别会被打印-->
            <!--<onMismatch>DENY</onMismatch>-->
        </filter>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
    </appender>

    <!-- 文件输出日志 (时间策略进行文件输出，超过指定时间对文件进行备份) -->
    <appender name="logFile-time" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logbase}logFile-time.log</file>
        <Encoding>UTF-8</Encoding>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <FileNamePattern>${logbase}logFile-time.%d{yyyy-MM-dd}.log</FileNamePattern>
            <maxHistory>30</maxHistory>
        </rollingPolicy>
    </appender>

    <!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件备份) -->
    <appender name="logFile-size" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <file>${logbase}logFile-size.log</file>
        <Encoding>UTF-8</Encoding>
        <filter class="ch.qos.logback.classic.filter.LevelFilter">
            <level>INFO</level>
            <onMatch>ACCEPT</onMatch>
            <onMismatch>ACCEPT</onMismatch>
        </filter>
        <encoder>
            <pattern>%date [%thread] %-5level %logger{80} - %msg%n</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
            <FileNamePattern>${logbase}logFile-size.%i.log</FileNamePattern>
            <minIndex>1</minIndex>
            <maxIndex>3</maxIndex>
        </rollingPolicy>
        <triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
            <MaxFileSize>2MB</MaxFileSize>
        </triggeringPolicy>
    </appender>
    <!-- Output by Email -->
    <!--
    <appender name="Email" class="ch.qos.logback.classic.net.SMTPAppender">
        <SMTPHost>stmp host name</SMTPHost>
        <To>Email Address</To>
        <To>Email Address</To>
        <From>Email Address</From>
        <Subject>TESTING Email Function: %logger{20} - %m</Subject>
        <layout class="ch.qos.logback.classic.html.HTMLLayout">
             <pattern>%date%level%thread%10logger%file%line%msg</pattern>
        </layout>
    </appender> -->

    <!-- Output to Database -->
    <!--
    <appender name="DB" class="ch.qos.logback.classic.db.DBAppender">
        <connectionSource class="ch.qos.logback.core.db.DriverManagerConnectionSource">
             <driverClass>com.mysql.jdbc.Driver</driverClass>
             <url>jdbc:mysql://localhost:3306/test</url>
             <user>root</user>
             <password>trend_dev</password>
        </connectionSource>
    </appender> -->

    <!-- 设置configuration下的logger的级别为INFO，默认是继承root logger的debug级别
         additivity 设置是否叠加输出-->
    <logger name="ch.qos.logback"  additivity="false" level="ERROR" />
    <root>
        <level value="debug" />
        <appender-ref ref="stdout" />
        <appender-ref ref="logFile-size" />
        <appender-ref ref="logFile-time" />
    </root>

</configuration>